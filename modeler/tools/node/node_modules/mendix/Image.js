import{Platform,TouchableNativeFeedback,TouchableOpacity,View,Image as Image$1}from"react-native";import{Component,createElement}from"react";import{p as pluckFromList,e as exclude,l as lastFromList}from"./c701e63b.js";const DEFAULT_RIPPLE_COLOR="rgba(0, 0, 0, 0.2)";class Image extends Component{constructor(){super(...arguments),this.onPressHandler=this.onPress.bind(this)}onPress(){this.props.onClick&&this.props.onClick.canExecute&&this.props.onClick.execute()}render(){const Touchable="android"===Platform.OS?TouchableNativeFeedback:TouchableOpacity,{containerStyle:containerStyle,imageStyle:imageStyle,rippleStyle:rippleStyle}=this.processStyles(),touchableProps="android"===Platform.OS?{useForeground:TouchableNativeFeedback.canUseNativeForeground(),background:TouchableNativeFeedback.Ripple(rippleStyle.color,!1)}:{};return this.props.source.value&&(this.props.onClick?createElement(Touchable,Object.assign({},touchableProps,{testID:this.props.name,onPress:this.onPressHandler}),createElement(View,{style:containerStyle},createElement(Image$1,{source:this.props.source.value,style:imageStyle,fadeDuration:0}))):createElement(View,{style:containerStyle},createElement(Image$1,{source:this.props.source.value,style:imageStyle,fadeDuration:0})))}processStyles(){const containerStyles=pluckFromList(this.props.style,"container"),containerStyleFiltered=containerStyles.map(style=>exclude(style,["rippleColor"])),imageStyle=pluckFromList(this.props.style,"image");return{containerStyle:containerStyleFiltered,rippleStyle:{color:lastFromList(containerStyles,"rippleColor")||DEFAULT_RIPPLE_COLOR},imageStyle:imageStyle}}}export{Image};
