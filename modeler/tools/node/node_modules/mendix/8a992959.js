import{a as newId}from"./d5eebceb.js";import{f as observable$$1}from"./6727fec8.js";import{b as AssertionError}from"./ff203afa.js";import{s as attributeToClientValue,q as clientToAttributeValue}from"./02d97a6c.js";import{c as stateUnavailable}from"./b3fab43d.js";import{b as unavailable,c as flatMapL,d as available,a as loading,e as mapL,f as flattenArrayL}from"./7a470c91.js";import{a as subscriptionDependency,b as loadableResource,c as using}from"./12049987.js";var Access;function accessible(value,access=Access.Write){return{access:access,value:value}}function notAccessible(){return{access:Access.None}}!function(Access){Access[Access.None=0]="None",Access[Access.Read=1]="Read",Access[Access.Write=2]="Write"}(Access||(Access={}));class MxObject1{constructor(mxObject){this.mxObject=mxObject,this.attributeDependencies={},this.objectDependency=subscriptionDependency(`Object ${mxObject.getGuid()}`,{guid:mxObject.getGuid()});const metaObject=mx.meta.getEntity(mxObject.getEntity());for(const attr of metaObject.getAttributes())this.attributeDependencies[attr]=subscriptionDependency(`Attribute ${attr} of object ${mxObject.getGuid()}`,{guid:mxObject.getGuid(),attr:attr})}getGuid(){return this.mxObject.getGuid()}getEntity(){return this.mxObject.getEntity()}old(){return this.mxObject}get(attribute){return this.objectDependency.reportObserved(),Object.prototype.hasOwnProperty.call(this.attributeDependencies,attribute)?(this.attributeDependencies[attribute].reportObserved(),function(mxObject,attribute){const access=getAccess(mxObject,attribute);if(access===Access.None)return notAccessible();return accessible(clientToAttributeValue(mxObject.get(attribute),mxObject.getAttributeType(attribute)),access)}(this.mxObject,attribute)):notAccessible()}set(attribute,value){if(getAccess(this.mxObject,attribute)!==Access.Write)throw new AssertionError(`No write access to attribute ${attribute}`);this.mxObject.set(attribute,attributeToClientValue(value))}getByPath(path){const[association,,...rest]=path.split("/"),nextPath=rest.length?rest.join("/"):void 0,reference=this.get(association);return reference.access===Access.None||void 0===reference.value?unavailable():flatMapL(function(guid){const resource=cacheBy(fetchObjectResources,guid,()=>loadableResource(`fetching object '${guid}'`,()=>new Promise((resolve,reject)=>mx.data.get({guid:guid,callback(obj){resolve(obj?available(obj):unavailable())},error:reject}))));return flatMapL(resource.get(),MxObject1.from)}(reference.value),nextObject=>nextPath?nextObject.getByPath(nextPath):available(nextObject))}static from(mxObject){if(mxObject.isUnavailable())return unavailable();const mxObject1=mxObject.__cached_mxObj1||(mxObject.__cached_mxObj1=new MxObject1(mxObject));return mxObject1.objectDependency.reportObserved(),available(mxObject1)}static fromState(state){return void 0===state?loading():state===stateUnavailable?unavailable():MxObject1.from(state)}}function getAccess(mxObject,attribute){return mxObject.has(attribute)?mxObject.isReadonlyAttr(attribute)?Access.Read:Access.Write:Access.None}const fetchObjectResources=new Map;const fetchObjectsResources=new Map;function fetchObjects(guids){guids.sort();const resource=cacheBy(fetchObjectsResources,guids,()=>loadableResource(`fetching objects ${guids.join(", ")}`,()=>guids.length>0?new Promise((resolve,reject)=>mx.data.get({guids:guids,callback:objs=>resolve(available(objs)),error:reject})):available([])));return mapL(resource.get(),objs=>flattenArrayL(objs.map(MxObject1.from)))}const serverValidationResources=new Map;function serverValidate(name,guid,attribute){return cacheBy(serverValidationResources,[guid,attribute],()=>{const lastSeenValidation=observable$$1.box(void 0,{deep:!1});return using(()=>{return[mx.data.subscribe({tag:name,guid:guid,attr:attribute,val:!0,callback:msg=>lastSeenValidation.set([msg,newId()])}).unsubscribe]},()=>lastSeenValidation.get())}).get()}function cacheBy(cache,key,createResource){const keyStr=JSON.stringify(key),cachedResource=cache.get(keyStr);if(void 0!==cachedResource)return cachedResource;const resource=createResource(),newResource=using(()=>(cache.set(keyStr,newResource),[()=>cache.delete(keyStr)]),()=>resource.get());return newResource}export{fetchObjects as a,MxObject1 as b,Access as c,serverValidate as d,accessible as e};
