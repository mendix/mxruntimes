import{Platform,View,TouchableNativeFeedback,TouchableOpacity}from"react-native";import{createElement}from"react";import{p as pluckFromList,e as exclude,l as lastFromList}from"./c701e63b.js";const DEFAULT_RIPPLE_COLOR="rgba(0, 0, 0, 0.2)",isAndroid="android"===Platform.OS;function Container(props){const{onClick:onClick,name:name,content:content,style:style}=props,{containerStyles:containerStyles,rippleStyle:rippleStyle}=function(styles){const containerStyles=pluckFromList(styles,"container"),containerStyleFiltered=containerStyles.map(style=>exclude(style,["rippleColor"])),rippleStyle={color:lastFromList(containerStyles,"rippleColor")||DEFAULT_RIPPLE_COLOR};return{containerStyles:containerStyleFiltered,rippleStyle:rippleStyle}}(style),containerStyle=isAndroid&&onClick?[...containerStyles,{overflow:"hidden"}]:containerStyles,ViewComponent=createElement(View,{testID:name,style:containerStyle},content);return onClick?createElement(Touchable,{rippleStyle:rippleStyle,onPress:()=>{onClick.canExecute&&!onClick.isExecuting&&onClick.execute()}},ViewComponent):ViewComponent}const Touchable=props=>isAndroid?createElement(TouchableNativeFeedback,Object.assign({},props,{useForeground:TouchableNativeFeedback.canUseNativeForeground(),background:TouchableNativeFeedback.Ripple(props.rippleStyle.color,!1)}),props.children):createElement(TouchableOpacity,Object.assign({},props),props.children);export{Container};
