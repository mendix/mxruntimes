import{b as AssertionError,j as isStringArray,d as ensure}from"./ddd19e5a.js";import{b as Big$1}from"./3019ed1f.js";import{b as validate,c as validation}from"./967e2ac0.js";import{a as publish}from"./b26e8ded.js";var uniqueIdCounter=0;function mapObject(obj,func,scope=null){return Object.keys(obj).reduce(function(acc,key){return acc[key]=func.call(scope,obj[key],key),acc},{})}function curry(f){return _curryN(f.length,[],f)}function curryN(n,f){return _curryN(n,[],f)}function _curryN(n,currentArgs,f){return function(...args){const allArgs=currentArgs.concat(args);return allArgs.length>=n?f.apply(this,allArgs.slice(0,n)):_curryN(n,allArgs,f)}}function flatten(arr){const result=[];return arr.forEach(elem=>{result.push.apply(result,elem)}),result}function arrayFromObject(obj){return Object.keys(obj).map(function(k){return[k,obj[k]]})}function objectFromArray(arr){return arr.reduce(function(acc,pair){return acc[pair[0]]=pair[1],acc},{})}function groupBy(arr,groupFn){return arr.map(item=>[groupFn(item),item]).reduce((acc,[key,value])=>(acc[key]||(acc[key]=[]),acc[key].push(value),acc),{})}function partition(p,as){for(var matching=[],unmatching=[],i=0;i<as.length;++i)p(as[i])?matching.push(as[i]):unmatching.push(as[i]);return[matching,unmatching]}function clone(obj){return JSON.parse(JSON.stringify(obj))}function arraySubtract(source,target){for(var i=0;i<target.length;i++)for(var j=source.length-1;0<=j;j--)source[j].toString()===target[i].toString()&&source.splice(j,1);return source}function unique(arr){return arr.filter(function(el,i){return arr.indexOf(el)===i})}function getUniqueId(){return+new Date+"-"+uniqueIdCounter++}const snapshot=Symbol("snapshot");class MxObject{constructor(kwArgs){if(this._guid="0",this._unavailable=!1,this.metaData=null,this.jsonData=null,this.id="mendix.lib.MxObject",!(kwArgs.meta&&kwArgs.json&&kwArgs.json.objectType)){var entity=this.metaData&&this.metaData.getEntity();throw new Error("new MxObject(): cannot create Mendix object.  Check entity access"+(entity?" for entity "+entity:""))}this.metaData=kwArgs.meta,this._setJsonData(kwArgs.json),this.id+="("+this.jsonData.objectType+":"+this._guid+")"}resetFromJSON(json){this._setJsonData(json)}markAsUnavailable(){this._setJsonData({guid:this._guid,attributes:{}}),this._unavailable=!0}_setJsonData(json){for(var attr in this.jsonData=json,this._guid=json.guid,json.attributes)this._setAttributeValue(attr,this._getAttributeValue(attr))}getGuid(){return this._guid}hasChanges(){return!function(obj){for(var i in obj)return!1;return!0}(window.mx.data.getChanges(this._guid))}snapshot(){return this[snapshot]||(this[snapshot]=new MxObjectSnapshot(this))}isUnavailable(){return this._unavailable}set(attr,value){this._setContent(attr,value)}isReadonlyAttr(attr){return this.has(attr)?!!this.jsonData.attributes[attr].readonly:!this.metaData.has(attr)}fetch(path,callback,error){let pathComponents;pathComponents=path?path instanceof Array?path.slice():path.split("/"):[],this.isA(pathComponents[0])&&pathComponents.shift();let obj=this;const performFetch=()=>{if(0===pathComponents.length)callback(obj);else if(1===pathComponents.length)callback(obj.get(pathComponents[0]));else{const ref=pathComponents.shift(),entity=pathComponents.shift();obj._fetchReference(ref,entity,result=>{void 0===result?callback(null):Array.isArray(result)?0===pathComponents.length?callback(result):handleError(new AssertionError(this.id+".fetch : "+obj+" reference set should be last reference in path")):(obj=result,performFetch())},handleError)}};function handleError(e){error?error(e):window.mx.onError(e)}performFetch()}_fetchReference(attr,entity,callback,error){const references=this.getReferences(attr);0!==references.length?window.mx.data.get({guids:references,callback:objs=>{if(this.isObjectReferenceSet(attr))0===objs.length||objs[0].isA(entity)?callback(objs):callback(void 0);else{const obj=objs[0];obj&&obj.isA(entity)?callback(obj):callback(void 0)}},error:error}):callback(void 0)}get(attr){if("string"!=typeof attr)throw new AssertionError("parameter attr "+attr+" is not of type String");return this.has(attr)?this._convertToClientValue(attr,this._getRawValue(attr)):null}getOriginalValue(attr){if("string"!=typeof attr)throw new AssertionError("parameter attr "+attr+" is not of type String");return this.has(attr)?this._convertToClientValue(attr,this._getRawOriginalValue(attr)):null}has(attr){if("string"!=typeof attr)throw new AssertionError("attribute parameter is not a string");return Object.prototype.hasOwnProperty.call(this.jsonData.attributes,attr)}getReferences(attr){if("string"!=typeof attr)throw new AssertionError("parameter attr "+attr+" is not of type String.");if(!this.has(attr))return[];if(!this.isReference(attr))throw new AssertionError("attribute "+attr+" is not an ObjectReference(Set).");const ref=this._getRawValue(attr);return this.isObjectReference(attr)?null==ref?[]:[ref]:null==ref?[]:ref.slice()}getOriginalReferences(attr){if("string"!=typeof attr)throw new AssertionError("parameter attr "+attr+" is not of type String.");if(!this.has(attr))return[];if(!this.isReference(attr))throw new AssertionError("attribute "+attr+" is not an ObjectReference(Set).");const ref=this._getRawOriginalValue(attr);return this.isObjectReference(attr)?null==ref?[]:[ref]:null==ref?[]:ref.slice()}getReference(attr){return this.get(attr)}isEnum(attr){return this.metaData.isEnum(attr)}isNumeric(attr){return this.metaData.isNumeric(attr)}isCurrency(attr){return this.metaData.isCurrency(attr)}isPassword(attr){return this.metaData.isPassword(attr)}isDate(attr){return this.metaData.isDate(attr)}isLocalizedDate(attr){return this.metaData.isLocalizedDate(attr)}isBoolean(attr){return this.metaData.isBoolean(attr)}isReference(attr){return this.metaData.isReference(attr)}isObjectReference(attr){return this.metaData.isObjectReference(attr)}isObjectReferenceSet(attr){return this.metaData.isObjectReferenceSet(attr)}getOptions(attr){return this.metaData.getOptions(attr)}getEnumMap(attr){return this.metaData.getEnumMap(attr)}getEnumKVPairs(attr){return this.metaData.getEnumKVPairs(attr)}getEnumCaption(attr){return this.metaData.getEnumCaption(attr,this.get(attr))}hasChildren(attr){if("string"!=typeof attr)throw new AssertionError("parameter attr ("+attr+") is not of type String.");return!this._attributeChanged(attr)&&this._hasChildren(attr)}getChildren(attr){if("string"!=typeof attr)throw new AssertionError("parameter attr ("+attr+") is not of type String.");if(!this.has(attr))return[];if(!this.isReference(attr))throw new AssertionError("attribute "+attr+" is not an ObjectReference(Set).");return this._attributeChanged(attr)?[]:this._hasChildren(attr)?this._getChildren(attr):[]}getChild(attr){if("string"!=typeof attr)throw new AssertionError("parameter attr("+attr+") is not of type String.");if(!this.has(attr))return;if(!this.isObjectReference(attr))throw new AssertionError("attribute "+attr+" is not an ObjectReference.");const children=this.getChildren(attr);return 0===children.length?null:children[0]}removeReferences(attr,guids){if("string"!=typeof attr)throw new AssertionError("parameter attr is not of type String.");if(!this.has(attr))return!1;if(!this.isReference(attr))throw new AssertionError("attempt to remove Reference from non-Reference attribute : "+attr);if(Array.isArray(guids)||(guids=[guids]),this._attributeChanged(attr)||!this._hasChildren(attr))this.isObjectReference(attr)?this._setContent(attr,null):this._setContent(attr,arraySubtract(this.getReferences(attr),guids));else{if(!this.isObjectReference(attr)){for(var i=0;i<guids.length;i++)delete this.jsonData.attributes[attr].value[guids[i]];var val=arraySubtract(this.getReferences(attr),guids);return this._makeChange(attr,val)}this._setContent(attr,null)}return!0}addReference(attr,guid){if("string"!=typeof attr)throw new AssertionError("parameter attr is not of type String.");if(!guid)throw new AssertionError("parameter guid is not set.");if(!this.has(attr))return!1;if(!this.isReference(attr))throw new AssertionError("attempt to add Reference to non-Reference attribute : "+attr);if(this.isObjectReference(attr))this._setContent(attr,guid);else{var guids=this.getReferences(attr);guids.join(";").match(guid)||(guids.push(guid),this._setContent(attr,guids))}return!0}addReferences(attr,guids){if("string"!=typeof attr)throw new AssertionError("parameter attr is not of type String.");if(!Array.isArray(guids))throw new AssertionError("parameter guids is not an Array.");if(!this.has(attr))return!1;if(!this.isObjectReferenceSet(attr))throw new AssertionError("attempt to add References to non-ReferenceSet attribute : "+attr);const currentGuids=this.getReferences(attr),guidsToAdd=guids.filter(guid=>!currentGuids.includes(guid));return guidsToAdd.length>0&&this._setContent(attr,currentGuids.concat(guidsToAdd)),!0}getReferenceAttributes(){return this.metaData.getReferenceAttributes().filter(attr=>this.has(attr))}getAttributes(){return this.metaData.getAttributes().filter(attr=>this.has(attr))}getPrimitives(){return this.metaData.getAttributesWithoutReferences().filter(attr=>this.has(attr))}getAttributeType(attr){return!!this.has(attr)&&this.metaData.getAttributeType(attr)}getSelectorEntity(attr){return this.has(attr)?this.metaData.getSelectorEntity(attr):null}getEntity(){return this.metaData.getEntity()}isPersistable(){return this.metaData.isPersistable()}isNew(){return window.mx.data.isNew(this._guid)}isA(classname){return this.metaData.isA(classname)}hasSuperEntities(){return this.metaData.hasSuperEntities()}getSuperEntities(){return this.metaData.getSuperEntities()}hasSubEntities(){return this.metaData.hasSubEntities()}getSubEntities(){return this.metaData.getSubEntities()}inheritsFrom(className){return this.metaData.inheritsFrom(className)}toJSON(){return this.jsonData}toString(){return this.getGuid()}_getRawValue(attr){if(this._attributeChanged(attr)){return window.mx.data.getChanges(this._guid)[attr].value}return this._getRawOriginalValue(attr)}_getRawOriginalValue(attr){return this._hasChildren(attr)?this._getChildValue(attr):this._getAttributeValue(attr)}_attributeChanged(attr){const changes=window.mx.data.getChanges(this._guid);return Object.prototype.hasOwnProperty.call(changes,attr)}_getChildren(attr){return(this.isObjectReference(attr)?[this._getAttributeValue(attr)]:Object.values(this._getAttributeValue(attr))).map(json=>MxObject.fromJson(json))}_getChildValue(attr){const guids=this._getChildren(attr).map(child=>child.getGuid());return this.isObjectReference(attr)?0===guids.length?null:guids[0]:guids}_convertToRuntimeValue(attr,value){if("String"!==this.getAttributeType(attr)&&""===value)return this.isObjectReferenceSet(attr)?[]:null;if(null==value)return null;if(this.isNumeric(attr)){const bigValue=Big$1(value);if(validate(bigValue,this.metaData.getAttributeType(attr))!==validation.OK)throw new Error(`Cannot set invalid value '${bigValue}' to MxObject attribute '${attr}'`);return String(bigValue)}if(this.isDate(attr))return this.isLocalizedDate(attr)?Number(value):window.mx.parser.delocalizeEpoch(Number(value));if(this.isPassword(attr))return value.replace(/[\s\t]+$/,"").replace(/^[\s\t]+/,"");if(this.isBoolean(attr))return Boolean(value);if(this.isObjectReference(attr)){if(Array.isArray(value))throw new Error("Trying to set single object reference to multiple values");return value}if(this.isObjectReferenceSet(attr)){if(!Array.isArray(value))throw new Error("Trying to set object reference set to single value");return value}return String(value)}_convertToClientValue(attr,value){return null==value?"":this.isNumeric(attr)?Big$1(value):this.isDate(attr)?this.isLocalizedDate(attr)?value:window.mx.parser.localizeEpoch(value):this.isBoolean(attr)?value:this.isObjectReferenceSet(attr)?0===value.length?"":value:String(value)}_setContent(attr,value){if("string"!=typeof attr)throw new AssertionError("parameter attr ("+attr+") is not of type String.");if(!this.metaData.has(attr))return;const newValue=this._convertToRuntimeValue(attr,value),oldValue=this._getRawValue(attr);newValue!==oldValue&&(this._makeChange(attr,newValue),this.metaData.isBidirectionalReference(attr)&&(getObjects(this.isObjectReference(attr)?[oldValue]:arraySubtract(oldValue,newValue)).filter(mxObj=>!mxObj.isReadonlyAttr(attr)&&mxObj.getReferences(attr).includes(this._guid)).forEach(mxObj=>mxObj.removeReferences(attr,[this._guid])),getObjects(this.isObjectReference(attr)?[newValue]:arraySubtract(newValue,oldValue)).filter(mxObj=>!mxObj.isReadonlyAttr(attr)&&!mxObj.getReferences(attr).includes(this._guid)).forEach(mxObj=>mxObj.addReference(attr,this._guid))))}_hasChildren(attr){if(!this.isReference(attr))return!1;const value=this._getAttributeValue(attr);return value&&"object"==typeof value&&null==value.length}_getAttributeValue(attr){var val=this.jsonData.attributes[attr];return void 0===val&&(val=null),val&&"object"==typeof val&&"value"in val?val.value:val}_setAttributeValue(attr,value){var val=this.jsonData.attributes[attr];void 0===value&&(value=null),val&&"object"==typeof val&&"value"in val?val.value=value:this.jsonData.attributes[attr]=value}_makeChange(attr,value){if(this.isUnavailable())throw new AssertionError(`Cannot modify attribute ${attr} of an unavailable object.`);window.mx.data.makeChange(this._guid,attr,value),publish({guid:this._guid,attr:attr}).catch(window.mx.onError)}static fromJson(json){return new MxObject({json:json,meta:window.mx.meta.getEntity(json.objectType)})}}function getObjects(guids){return guids.map(guid=>window.mx.data.getCachedObject(guid)).filter(mxObject=>null!=mxObject)}class MxObjectSnapshot extends MxObject{constructor(mxObject){super({meta:mxObject.metaData,json:{guid:mxObject.getGuid(),objectType:mxObject.getEntity()}}),this._mxObject=mxObject}resetFromJSON(json){super.resetFromJSON(json),this._mxObject.resetFromJSON(json)}markAsUnavailable(){super.markAsUnavailable(),this._mxObject.markAsUnavailable()}hasChanges(){return!1}snapshot(){return this}isReadonlyAttr(attr){return!0}_fetchReference(attr,entity,callback,error){super._fetchReference(attr,entity,result=>{result instanceof MxObject?callback(result.snapshot()):Array.isArray(result)?callback(result.map(mxobj=>mxobj.snapshot())):callback(result)},error)}has(attr){return this._mxObject.has(attr)}toJSON(){return this._mxObject.toJSON()}_attributeChanged(attr){return!1}_getAttributeValue(attr){return this._mxObject._getAttributeValue(attr)}_makeChange(attr,value){throw new AssertionError(`Cannot modify attribute ${attr} of a read-only object.`)}_getChildren(attr){return this._mxObject._getChildren(attr).map(mxobj=>mxobj.snapshot())}convertToEditable(){return window.mx.data.removeChanges(this.getGuid()),this._mxObject}}function clientToAttributeValue(value,type){switch(type){case"DateTime":return""!==value?new Date(value):void 0;case"String":return value;default:return""!==value?value:void 0}}function attributeToClientValue(value){return void 0===value?"":value instanceof Date?value.getTime():value}function assertIsAttributeValue(value,entity,attribute){const metaObject=mx.meta.getEntity(entity),type=metaObject.getAttributeType(attribute);"Enum"===type?function(condition){if(!condition)throw new AssertionError(`Value ${value} is not assignable to attribute of type ${type}.`)}(void 0===value||!!metaObject.getEnumMap(attribute).find(x=>x.key===value)):assertIsNonEnumValue(value,type)}function assertIsNonEnumValue(value,type){switch(type){case"String":case"ObjectReference":case"HashString":return assertIs("string"==typeof value||void 0===value);case"ObjectReferenceSet":return assertIs(Array.isArray(value)&&value.every(v=>"string"==typeof v));case"Boolean":return assertIs("boolean"==typeof value);case"DateTime":return assertIs(void 0===value||value instanceof Date&&!isNaN(value.getTime()));case"Float":case"Currency":case"Integer":case"Long":case"Decimal":return assertIs(value instanceof Big$1||void 0===value);default:throw new AssertionError(`Attribute type ${type} is not supported.`)}function assertIs(condition){if(!condition)throw new AssertionError(`Value ${value} is not assignable to attribute of type ${type}.`)}}function anyToExpressionVariable(value){switch(typeof value){case"undefined":case"string":case"boolean":return value;case"number":return Big$1(value);default:if(value instanceof Big$1||value instanceof Date||value instanceof MxObject)return value;if(null===value)return;if(Array.isArray(value)){if(value.every(elem=>elem instanceof MxObject))return value;throw new AssertionError(`Array ${value.join(", ")} cannot be used as Nanoflow variable, `+"because it contains something else then MxObjects.")}throw new AssertionError(`Value ${value} cannot be used as Nanoflow variable.`)}}function attributeToExpressionVariable(value){return isStringArray(value)?value.map(guid=>ensure(mx.data.getCachedObject(guid))):value}export{MxObject as a,clone as b,curry as c,unique as d,groupBy as e,arrayFromObject as f,curryN as g,getUniqueId as h,objectFromArray as i,partition as j,mapObject as k,flatten as l,clientToAttributeValue as m,anyToExpressionVariable as n,attributeToClientValue as o,attributeToExpressionVariable as p,assertIsAttributeValue as q,assertIsNonEnumValue as r};
