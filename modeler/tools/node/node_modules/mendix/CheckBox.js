import"./eed44530.js";import{Text,View,Switch}from"react-native";import{Component,createElement,Fragment}from"react";import{a as pluckFromList,b as exclude,d as only}from"./03e5fd40.js";import{a as Alert}from"./244bc009.js";class CheckBox extends Component{constructor(props){super(props),this.onChange=this.onChange.bind(this)}onChange(value){"available"!==this.props.value.status||this.props.value.readOnly||this.props.value.setValue(value)}render(){const{inputStyles:inputStyles,inputErrorStyles:inputErrorStyles,labelStyles:labelStyles,labelStyleProps:labelStyleProps,validationMessageStyles:validationMessageStyles,inputSwitchStyleProps:inputSwitchStyleProps,inputErrorSwitchStyleProps:inputErrorSwitchStyleProps,containerStyle:containerStyle,inputContainerStyle:inputContainerStyle}=this.processStyles(),hasValidationMessage=!!this.props.value.validation,labelComponent=this.props.caption?createElement(Text,Object.assign({testID:`${this.props.name}$label`,key:"label",style:labelStyles},labelStyleProps),this.props.caption.value):null,trackColor=hasValidationMessage?{true:inputErrorSwitchStyleProps.trackColorOn||"",false:inputErrorSwitchStyleProps.trackColorOff||""}:{true:inputSwitchStyleProps.trackColorOn||"",false:inputSwitchStyleProps.trackColorOff||""},thumbColor=hasValidationMessage?this.props.value.value?inputErrorSwitchStyleProps.thumbColorOn:inputErrorSwitchStyleProps.thumbColorOff:this.props.value.value?inputSwitchStyleProps.thumbColorOn:inputSwitchStyleProps.thumbColorOff,props={testID:this.props.name,style:hasValidationMessage?inputErrorStyles:inputStyles,onValueChange:this.onChange,value:this.props.value.value||!1,disabled:this.props.value.readOnly,trackColor:trackColor,thumbColor:thumbColor};return createElement(Fragment,null,createElement(View,{key:"container",style:containerStyle},labelComponent,createElement(View,{style:inputContainerStyle},createElement(Switch,Object.assign({key:"input"},props)),createElement(Alert,{key:"alert",testID:`${this.props.name}$alert`,error:this.props.value.validation,style:[...validationMessageStyles]}))))}processStyles(){const switchStylePropsKeys=["thumbColorOn","thumbColorOff","trackColorOn","trackColorOff"],labelStylePropsKeys=["numberOfLines"],isHorizontal="horizontal"===this.props.formOrientation,inputStyles=pluckFromList(this.props.style,"input").map(inputStyle=>{const checkBoxStyleProps=exclude(inputStyle,switchStylePropsKeys);return exclude(checkBoxStyleProps,labelStylePropsKeys)}),inputErrorStyles=pluckFromList(this.props.style,"inputError").map(inputErrorStyle=>{const checkBoxStyleProps=exclude(inputErrorStyle,switchStylePropsKeys);return exclude(checkBoxStyleProps,labelStylePropsKeys)}),inputSwitchStyleProps=pluckFromList(this.props.style,"input").map(inputStyle=>only(inputStyle,switchStylePropsKeys)).reduce((result,style)=>Object.assign({},result,style),{}),inputErrorSwitchStyleProps=pluckFromList(this.props.style,"inputError").map(inputErrorStyle=>only(inputErrorStyle,switchStylePropsKeys)).reduce((result,style)=>Object.assign({},result,style),{}),labelStyleDirection=isHorizontal?{flex:this.props.labelWidth}:void 0,labelStyles=[...pluckFromList(this.props.style,"label").map(labelStyle=>{const labelStyleProps=exclude(labelStyle,switchStylePropsKeys);return exclude(labelStyleProps,labelStylePropsKeys)}),labelStyleDirection],labelStyleProps=pluckFromList(this.props.style,"label").map(labelStyle=>only(labelStyle,labelStylePropsKeys)).reduce((result,style)=>Object.assign({},result,style),{}),validationMessageStyles=pluckFromList(this.props.style,"validationMessage"),remainingFlexSpace=12-this.props.labelWidth;return{inputStyles:inputStyles,inputErrorStyles:inputErrorStyles,labelStyles:labelStyles,labelStyleProps:labelStyleProps,validationMessageStyles:validationMessageStyles,inputSwitchStyleProps:inputSwitchStyleProps,inputErrorSwitchStyleProps:inputErrorSwitchStyleProps,containerStyle:[...pluckFromList(this.props.style,"container"),isHorizontal?{flexDirection:"row",alignItems:"center"}:void 0],inputContainerStyle:isHorizontal?{flex:remainingFlexSpace,alignItems:"flex-end"}:{alignItems:"flex-start"}}}}export{CheckBox};
