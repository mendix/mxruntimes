import{Switch}from"react-native";import{Component,createElement}from"react";import"./5b829f15.js";import{f as flatten,e as extract}from"./84c5d961.js";import{I as InputContainer}from"./8e73ab64.js";class CheckBox extends Component{constructor(){super(...arguments),this.onChangeHandler=this.onChange.bind(this)}render(){const style=function(styles){const style=flatten(styles),{container:container,validationMessage:validationMessage}=style,inputPropsKeys=["thumbColorOn","thumbColorOff","trackColorOn","trackColorOff"],[inputProps,input]=extract(style.input,inputPropsKeys),[inputDisabledProps,inputDisabled]=extract(style.inputDisabled,inputPropsKeys),[inputErrorProps,inputError]=extract(style.inputError,inputPropsKeys),[labelProps,label]=extract(style.label,["numberOfLines"]);return{container:container,inputProps:inputProps,input:input,inputDisabledProps:inputDisabledProps,inputDisabled:inputDisabled,inputErrorProps:inputErrorProps,inputError:inputError,labelProps:labelProps,label:label,validationMessage:validationMessage}}(this.props.style),editable=!this.props.value.readOnly,hasValidationMessage=!!this.props.value.validation,isHorizontal="horizontal"===this.props.formOrientation,inputProps=editable?hasValidationMessage?style.inputErrorProps:style.inputProps:style.inputDisabledProps,inputStyle=editable?hasValidationMessage?style.inputError:style.input:style.inputDisabled;return createElement(InputContainer,{name:this.props.name,label:this.props.caption,validation:this.props.value.validation,formOrientation:this.props.formOrientation,labelWidth:this.props.labelWidth,containerStyle:style.container,labelStyle:style.label,labelStyleProps:style.labelProps,validationMessageStyle:style.validationMessage,inputContainerStyle:{alignItems:isHorizontal?"flex-end":"flex-start"}},createElement(Switch,{testID:this.props.name,style:inputStyle,onValueChange:this.onChangeHandler,value:this.props.value.value||!1,disabled:!editable,trackColor:{true:inputProps.trackColorOn,false:inputProps.trackColorOff},thumbColor:this.props.value.value?inputProps.thumbColorOn:inputProps.thumbColorOff}))}onChange(value){this.props.value.readOnly||this.props.value.setValue(value)}}export{CheckBox};
