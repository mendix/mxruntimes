import{NativeModules}from"react-native";import{e as get}from"./33defb9b.js";const DocumentDirectoryPath=NativeModules.NativeFsModule.DocumentDirectoryPath;FormData.prototype.append=function(key,value,name){"blob"===key&&value.nativePayload&&(value=value.nativePayload,name&&(value.name=name)),this._parts.push([key,value])};class NativeFileBackend{async listDir(dirPath){return NativeModules.NativeFsModule.list(relativeToAbsolutePath(dirPath))}async removeDir(dirPath){return NativeModules.NativeFsModule.remove(relativeToAbsolutePath(dirPath))}async readFile(filePath){const blob=new Blob;return blob.nativePayload={uri:`file://${relativeToAbsolutePath(filePath)}`,name:filePath.substring(filePath.lastIndexOf("/")+1),type:"*/*"},blob}async storeFile(blob,filePath){await NativeModules.NativeFsModule.save(blob.data,relativeToAbsolutePath(filePath)),blob.close()}async moveFile(filePath,newPath){return NativeModules.NativeFsModule.move(relativeToAbsolutePath(filePath),relativeToAbsolutePath(newPath))}async removeFile(filePath){return NativeModules.NativeFsModule.remove(relativeToAbsolutePath(filePath))}async downloadFile(url,filePath){const blob=await get(url,"blob");await NativeModules.NativeFsModule.save(blob.data,relativeToAbsolutePath(filePath)),blob.close()}static async readAsDataURL(filePath){return NativeModules.NativeFsModule.readAsDataURL(relativeToAbsolutePath(filePath))}}function relativeToAbsolutePath(path){return path.indexOf(DocumentDirectoryPath)>-1?path:[DocumentDirectoryPath,path].join("/")}export{NativeFileBackend as a};
