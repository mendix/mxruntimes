function exclude(source,exclusionKeys){return Object.keys(source).filter(key=>!exclusionKeys.includes(key)).reduce((result,key)=>Object.assign(Object.assign({},result),{[key]:source[key]}),{})}function only(source,selectionKeys){return selectionKeys.filter(key=>void 0!==source[key]).reduce((result,key)=>Object.assign(Object.assign({},result),{[key]:source[key]}),{})}function pluckFromList(list,key){return list.filter(item=>void 0!==item&&void 0!==item[key]).map(item=>item[key])}function lastFromList(list,key){const res=pluckFromList(list,key);return res.length>0?res[res.length-1]:void 0}export{exclude as e,lastFromList as l,only as o,pluckFromList as p};
