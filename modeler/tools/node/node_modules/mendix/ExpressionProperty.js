import"./d4030583.js";import"./43297fe2.js";import{e as ensure}from"./c49f953c.js";import"./0e7164f2.js";import"./b98156b5.js";import"./ee5a929f.js";import{h as asDynamicValue,a as available,l as loading,u as unavailable}from"./189c82c6.js";import"big.js";import{p as pageScope}from"./8676e47e.js";import{a as asProperty}from"./72a4665b.js";import"./d6b7d05a.js";import"./da601b36.js";import{b as evaluateFormExpression$,E as EmptyVariableAccessError,A as AccessDeniedError}from"./7ca6d1ae.js";const ExpressionProperty=asProperty((config,store)=>{const result=asDynamicValue(()=>{try{const value=evaluateFormExpression$(config.expression,store,`Value of ${config.friendlyId}`,{pageTitle:()=>ensure(store.get$(pageScope,"form"))[0].getTitle()});return available(value)}catch(e){return e instanceof EmptyVariableAccessError||e instanceof AccessDeniedError?loading():(function(config,e){mx.onError(new Error(`An error occurred while evaluating expression in ${config.friendlyId}: ${e.message}`))}(config,e),unavailable())}});return()=>result.get()});export{ExpressionProperty};
