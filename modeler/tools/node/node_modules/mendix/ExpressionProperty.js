import"./f0d16cff.js";import"./ad1d08ab.js";import{y as asDynamicValue,e as ensure,a as available,l as loading,k as unavailable}from"./79cc6120.js";import{a as asProperty}from"./72a4665b.js";import"big.js";import{p as pageScope}from"./50adac5e.js";import"./6ae611dc.js";import"./b98156b5.js";import"./e50ef415.js";import"./0e7164f2.js";import{b as evaluateFormExpression$,E as EmptyVariableAccessError,A as AccessDeniedError}from"./379ba2c6.js";const ExpressionProperty=asProperty((config,store)=>{const result=asDynamicValue(()=>{try{const value=evaluateFormExpression$(config.expression,store,`Value of ${config.friendlyId}`,{pageTitle:()=>ensure(store.get$(pageScope,"form"))[0].getTitle()});return available(value)}catch(e){return e instanceof EmptyVariableAccessError||e instanceof AccessDeniedError?loading():(function(config,e){mx.onError(new Error(`An error occurred while evaluating expression in ${config.friendlyId}: ${e.message}`))}(config,e),unavailable())}});return()=>result.get()});export{ExpressionProperty};
