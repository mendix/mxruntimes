import"./4887fae1.js";import"./b0fce5df.js";import{y as asDynamicValue,e as ensure,a as available,l as loading}from"./764abf4b.js";import{a as asProperty}from"./72a4665b.js";import"big.js";import{p as pageScope}from"./8dc90874.js";import"./8f1f3520.js";import"./b98156b5.js";import"./28ba9e42.js";import"./0e7164f2.js";import{b as evaluateFormExpression$,E as EmptyVariableAccessError,A as AccessDeniedError}from"./0c03647e.js";const ExpressionProperty=asProperty((config,store)=>{const result=asDynamicValue(()=>{try{const value=evaluateFormExpression$(config.expression,store,`Value of ${config.friendlyId}`,{pageTitle:()=>ensure(store.get$(pageScope,"form"))[0].getTitle()});return available(value)}catch(e){if(e instanceof EmptyVariableAccessError||e instanceof AccessDeniedError)return loading();throw e}});return()=>result.get()});export{ExpressionProperty};
