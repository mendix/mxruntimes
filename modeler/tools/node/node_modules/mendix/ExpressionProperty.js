import"./ef69c932.js";import{e as ensure}from"./0e413733.js";import{a as asProperty}from"./e3b801f3.js";import{p as pageScope,s as stateUnavailable}from"./5838721f.js";import"./fdd4c4ff.js";import"./d25c5dcf.js";import"./9df15dda.js";import"./573c00fc.js";import{h as asDynamicValue,a as available,l as loading}from"./b3d27a00.js";import{a as EmptyVariableAccessError,A as AccessDeniedError}from"./b9638e50.js";import{e as evaluateExpression$}from"./b4b86ec6.js";const ExpressionProperty=asProperty((config,store)=>{const result=asDynamicValue(()=>{try{const value=evaluateExpression$(config.expression,{pageTitle:()=>ensure(store.get$(pageScope,"form"))[0].getTitle(),currentObject:()=>{const mxObjectState=store.get$(config.scope,"object");return mxObjectState!==stateUnavailable?mxObjectState:void 0}});return available(value)}catch(e){if(e instanceof EmptyVariableAccessError||e instanceof AccessDeniedError)return loading();throw e}});return()=>result.get()});export{ExpressionProperty};
