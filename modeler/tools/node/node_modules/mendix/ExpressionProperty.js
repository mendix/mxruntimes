import"./14498da2.js";import"./53bf75a6.js";import{v as asDynamicValue,e as ensure,a as available,l as loading}from"./d04a146b.js";import{a as asProperty}from"./e3b801f3.js";import"big.js";import{p as pageScope}from"./5be1b62c.js";import"./572de7b1.js";import"./fdd4c4ff.js";import"./8ea35cb3.js";import"./573c00fc.js";import"./8e682f3a.js";import{b as evaluateFormExpression$,E as EmptyVariableAccessError,A as AccessDeniedError}from"./4d108c4d.js";const ExpressionProperty=asProperty((config,store)=>{const result=asDynamicValue(()=>{try{const value=evaluateFormExpression$(config.expression,store,`Value of ${config.friendlyId}`,{pageTitle:()=>ensure(store.get$(pageScope,"form"))[0].getTitle()});return available(value)}catch(e){if(e instanceof EmptyVariableAccessError||e instanceof AccessDeniedError)return loading();throw e}});return()=>result.get()});export{ExpressionProperty};
