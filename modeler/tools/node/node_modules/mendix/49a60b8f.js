import"./43297fe2.js";import{m as mapValues,d as crash}from"./c49f953c.js";import{a as available,l as loading,m as mapL,g as getOrElseL}from"./189c82c6.js";import{f as fetchObjects$,M as MxObject1}from"./2745d635.js";function getNanoflow(nanoflowId){return nanoflowId()}async function getJavaScriptAction(jsActionId){return jsActionId()}function getActionParameters$(argMap,store){return mapValues(argMap,({source:source,widget:widget})=>{return function(state,source){if(void 0===state)return"selection"===source?available({objects:[]}):loading();if(Array.isArray(state)){const objects=mapL(fetchObjects$(state),objs=>objs.map(o=>o.old()));return available({objects:getOrElseL(objects,[])})}return mapL(MxObject1.fromState$(state),obj=>({object:obj.old()}))}(store.get$(widget,"allpages"===source?"allGuids":source),source)})}function toMicroflowParameters(parameters){const result={};return Object.keys(parameters).forEach(name=>{const value=parameters[name];value&&(result[name]="objects"in value?{guids:value.objects.map(mxobj=>mxobj.getGuid())}:"object"in value?{guid:value.object.getGuid()}:value)}),result}function toNanoflowArguments(parameters){const result=[];return Object.keys(parameters).forEach(name=>{const value=parameters[name];result.push({name:name,value:void 0!==value?"object"in value?value.object:crash():void 0})}),result}async function getNanoflowArguments(nanoflowId,context){const{paramsSpec:paramsSpec}=getNanoflow(nanoflowId),paramNameToGuids=Object.keys(paramsSpec).map(paramName=>({name:paramName,guid:context.getContext(paramsSpec[paramName])||void 0}));return async function(guids){return new Promise((resolve,reject)=>{mx.data.get({guids:guids,callback:resolve,error:reject})})}(paramNameToGuids.filter(x=>Boolean(x.guid)).map(x=>x.guid)).then(allObjects=>paramNameToGuids.map(({name:paramName,guid:guid})=>({name:paramName,value:allObjects.find(o=>o.getGuid()===guid)})))}function getGuidsFromMicroflowParameters(mfParams){const mfGuids=[];return Object.values(mfParams).forEach(mfParam=>{"guid"in mfParam?mfGuids.push(mfParam.guid):"guids"in mfParam&&mfGuids.push(...mfParam.guids)}),mfGuids}export{getGuidsFromMicroflowParameters as a,getJavaScriptAction as b,getNanoflow as c,toNanoflowArguments as d,getActionParameters$ as e,getNanoflowArguments as g,toMicroflowParameters as t};
