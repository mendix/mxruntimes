import{A as AssertionError}from"./43297fe2.js";function ensure(arg){if(null==arg)throw new Error("Did not expect an argument to be undefined");return arg}function crash(){throw new AssertionError}function friendlyName(Component){return Component.displayName||Component.name||"<component>"}function isDefined(value){return void 0!==value}function isString(value){return"string"==typeof value}function isJson(obj){return null!=obj&&"object"==typeof obj&&obj.constructor==={}.constructor}function isArrayOf(type,value){return value instanceof Array&&value.every(v=>void 0===v||v instanceof type)}function splitAttributePath(attributePath){const parts=attributePath.split("/");return parts.length>1&&parts.shift(),{attribute:parts.pop(),entityPath:parts.length?parts.join("/"):void 0}}function unique(list){return Array.from(new Set(list))}function tuple(...args){return args}function mapValues(source,mapValue){const result={};return Object.keys(source).forEach(key=>result[key]=mapValue(source[key])),result}function uniqueBy(list,keySelector){const res=[],keys={};return list.forEach(item=>{const key=keySelector(item);Object.prototype.hasOwnProperty.call(keys,key)||(keys[key]=!0,res.push(item))}),res}function concat(arrays){return[].concat(...arrays)}function escapeXml(s){return s.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;")}function containsKey(key,obj){return Object.prototype.hasOwnProperty.call(obj,key)}export{uniqueBy as a,isDefined as b,concat as c,crash as d,ensure as e,friendlyName as f,escapeXml as g,isString as h,isJson as i,isArrayOf as j,containsKey as k,mapValues as m,splitAttributePath as s,tuple as t,unique as u};
