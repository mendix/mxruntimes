import{NativeModules}from"react-native";import{g as get}from"./d2546a03.js";import{j as getUniqueId}from"./2776a567.js";const DEFAULT_FILES_DIRECTORY="files",DOCUMENT_DIR="documents",THUMBNAIL_DIR="thumbnails";function getFsFileName(guid,changeDate){return guid.replace(/:/g,"_")+"@"+(null!=changeDate&&""!==changeDate?changeDate.toString():"local")}const GUID_PREFIX="GUID:",GUID_REGEXP=new RegExp("^"+GUID_PREFIX);function createUnsyncedGuid(){return GUID_PREFIX+getUniqueId()}function wasGuidSynced(internalGuid){return!GUID_REGEXP.test(internalGuid)}function isSpecialAttributeName(attrName){return"guid"===attrName||"$"===attrName[0]}function isReadonlyAttr(obj,attr){return obj.$readonlyAttrs.includes(attr)}function objectToJson(obj){const attributes=Object.keys(obj).filter(attrName=>!isSpecialAttributeName(attrName)).reduce((acc,key)=>(acc[key]={value:obj[key]},isReadonlyAttr(obj,key)&&(acc[key].readonly=!0),acc),{});return{guid:obj.guid,objectType:obj.$objectType,attributes:attributes}}function jsonToObject(jsonData){const dbObj={guid:jsonData.guid,$objectType:jsonData.objectType,$readonlyAttrs:[]};for(const key in jsonData.attributes)dbObj[key]=jsonData.attributes[key].value,jsonData.attributes[key].readonly&&dbObj.$readonlyAttrs.push(key);return dbObj}const DocumentDirectoryPath=NativeModules.NativeFsModule.DocumentDirectoryPath;FormData.prototype.append=function(key,value,name){"blob"===key&&value.nativePayload&&(value=value.nativePayload,name&&(value.name=name)),this._parts.push([key,value])};class NativeFileBackend{constructor(rootDirectory){this.rootDirectory=rootDirectory}async listDir(dirPath){return NativeModules.NativeFsModule.list(relativeToAbsolutePath(dirPath))}async removeDir(dirPath){return NativeModules.NativeFsModule.remove(relativeToAbsolutePath(dirPath))}async readFile(filePath){const blob=new Blob;return blob.nativePayload={uri:`file://${relativeToAbsolutePath(filePath)}`,name:filePath.substring(filePath.lastIndexOf("/")+1),type:"*/*"},blob}async storeFile(blob,filePath){await NativeModules.NativeFsModule.save(blob.data,relativeToAbsolutePath(filePath)),blob.close()}async moveFile(filePath,newPath){return NativeModules.NativeFsModule.move(relativeToAbsolutePath(filePath),relativeToAbsolutePath(newPath))}async removeFile(filePath){return NativeModules.NativeFsModule.remove(relativeToAbsolutePath(filePath))}async downloadFile(url,filePath){const blob=await get(url,"blob");await NativeModules.NativeFsModule.save(blob.data,relativeToAbsolutePath(filePath)),blob.close()}toAbsolutePath(path){return function(rootDirectory,path){return rootDirectory+"/"+path}(this.rootDirectory,path)}static async readAsDataURL(filePath){return NativeModules.NativeFsModule.readAsDataURL(relativeToAbsolutePath(filePath))}}function relativeToAbsolutePath(path){return path.includes(DocumentDirectoryPath)?path:[DocumentDirectoryPath,path].join("/")}export{DOCUMENT_DIR as D,NativeFileBackend as N,THUMBNAIL_DIR as T,DEFAULT_FILES_DIRECTORY as a,isReadonlyAttr as b,createUnsyncedGuid as c,getFsFileName as g,isSpecialAttributeName as i,jsonToObject as j,objectToJson as o,wasGuidSynced as w};
