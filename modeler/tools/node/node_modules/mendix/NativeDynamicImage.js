import{Platform,TouchableNativeFeedback,TouchableOpacity,View,Image}from"react-native";import{createElement}from"react";import{p as pluckFromList,e as exclude,l as lastFromList}from"./c701e63b.js";import{_ as __rest}from"./5b829f15.js";const DynamicImage=props=>{const{imageStyle:imageStyle}=processStyles(props),imageProps={testID:props.name,style:imageStyle},placeHolderComponent=props.placeholder?createElement(Image,Object.assign({source:props.placeholder},imageProps,{fadeDuration:0})):null;return props.source.value?props.source.value(imageProps):placeHolderComponent},NativeDynamicImage=props=>{const Touchable="android"===Platform.OS?TouchableNativeFeedback:TouchableOpacity,{onClick:onClick}=props,imageProps=__rest(props,["onClick"]),{containerStyle:containerStyle,rippleStyle:rippleStyle}=processStyles(props),touchableProps="android"===Platform.OS?{useForeground:TouchableNativeFeedback.canUseNativeForeground(),background:TouchableNativeFeedback.Ripple(rippleStyle.color,!1)}:{};return onClick?createElement(Touchable,Object.assign({},touchableProps,{accessible:!1,onPress:()=>onClick.canExecute&&onClick.execute()}),createElement(View,{style:containerStyle},createElement(DynamicImage,Object.assign({},imageProps)))):createElement(View,{style:containerStyle},createElement(DynamicImage,Object.assign({},imageProps)))},processStyles=props=>{const styles=props.style?props.style:[],containerStyles=pluckFromList(styles,"container"),containerStyleFiltered=containerStyles.map(style=>exclude(style,["rippleColor"])),imageStyle=[{width:props.width||100,height:props.height||100},...pluckFromList(styles,"image")];return{containerStyle:containerStyleFiltered,rippleStyle:{color:lastFromList(containerStyles,"rippleColor")||"rgba(0, 0, 0, 0.2)"},imageStyle:imageStyle}};export{NativeDynamicImage};
