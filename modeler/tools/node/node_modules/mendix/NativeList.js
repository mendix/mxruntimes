import{View,FlatList}from"react-native";import"./14498da2.js";import{Component,createElement}from"react";import"./53bf75a6.js";import{a as available,e as ensure}from"./d04a146b.js";import{w as withStore,S as StoreProvider}from"./7c4c4be4.js";import"big.js";import{S as Store}from"./5be1b62c.js";import"./573c00fc.js";import{f as fromObjectItem}from"./7975ceb4.js";import{p as pluckFromList,e as exclude,o as only}from"./c979549b.js";const ItemScope=withStore(class extends Component{constructor(props){super(props),this.store=new Store(this.props.$store);const{obj:obj,scope:scope}=fromObjectItem(this.props.scope);this.store.set(scope,"object",available(obj))}componentWillUnmount(){this.store.destroy()}render(){return createElement(StoreProvider,{store:this.store},this.props.children)}});function NativeList(props){const{containerStyles:containerStyles,containerExtraStyleProps:containerExtraStyleProps,listItemStyle:listItemStyle}=function(props){const containerStyles=pluckFromList(props.style,"container").map(listStyle=>exclude(listStyle,listWrapperPropKeys)),containerExtraStyleProps=pluckFromList(props.style,"container").map(listStyle=>only(listStyle,listWrapperPropKeys)).reduce((result,style)=>Object.assign({},result,style),{numColumns:props.numberOfColumns||1}),listItemStyle=pluckFromList(props.style,"listItem");return listItemStyle.unshift({flex:1/(containerExtraStyleProps.numColumns||1)}),{containerStyles:containerStyles,containerExtraStyleProps:containerExtraStyleProps,listItemStyle:listItemStyle}}(props),listProps=Object.assign({testID:props.name,refreshing:isRefreshing(props.listInfo.status,props.onPullDown),style:containerStyles,data:props.listInfo.value?props.listInfo.value.items:[],horizontal:"horizontal"===props.scrollDirection,listKey:props.id,onRefresh:props.onPullDown?()=>props.onPullDown.canExecute&&props.onPullDown.execute():void 0,keyExtractor:i=>i.id,renderItem:({item:item,index:index})=>createElement(ItemScope,{scope:item},createElement(View,{testID:`${props.name}$item${index}`,style:listItemStyle},props.itemTemplate())),onEndReached:()=>{const newAmount=ensure(props.amount.value).plus(props.pageSize);props.amount.setValue(newAmount)}},containerExtraStyleProps);return createElement(FlatList,Object.assign({},listProps))}function isRefreshing(listInfoStatus,onPullDown){return onPullDown&&onPullDown.canExecute&&onPullDown.isExecuting||"loading"===listInfoStatus}const listWrapperPropKeys=["numColumns"];export{NativeList};
