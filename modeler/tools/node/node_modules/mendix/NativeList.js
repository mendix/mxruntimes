import{View,FlatList}from"react-native";import"./5dda5eb7.js";import{Component,createElement}from"react";import{d as ensure}from"./ddd19e5a.js";import{a as withStore,c as StoreProvider}from"./09d8efc8.js";import"./3019ed1f.js";import"./eed44530.js";import"./aa3ddc5d.js";import{a as Store}from"./2a30f3af.js";import{b as fromObjectItem}from"./4068f775.js";import{a as pluckFromList,b as exclude,d as only}from"./03e5fd40.js";const ItemScope=withStore(class extends Component{constructor(props){super(props),this.store=new Store(this.props.$store);const{obj:obj,scope:scope}=fromObjectItem(this.props.scope);this.store.set(scope,"object",obj)}componentWillUnmount(){this.store.destroy()}render(){return createElement(StoreProvider,{store:this.store},this.props.children)}});class NativeList extends Component{shouldComponentUpdate(nextProps){return"available"===nextProps.listInfo.status}render(){const{containerStyles:containerStyles,containerExtraStyleProps:containerExtraStyleProps,listItemStyle:listItemStyle}=function(props){const containerStyles=pluckFromList(props.style,"container").map(listStyle=>exclude(listStyle,listWrapperPropKeys)),containerExtraStyleProps=pluckFromList(props.style,"container").map(listStyle=>only(listStyle,listWrapperPropKeys)).reduce((result,style)=>Object.assign({},result,style),{numColumns:props.numberOfColumns||1}),listItemStyle=pluckFromList(props.style,"listItem");return listItemStyle.unshift({flex:1/(containerExtraStyleProps.numColumns||1)}),{containerStyles:containerStyles,containerExtraStyleProps:containerExtraStyleProps,listItemStyle:listItemStyle}}(this.props),listProps=Object.assign({testID:this.props.name,refreshing:isRefreshing(this.props.listInfo.status,this.props.onPullDown),style:containerStyles,data:this.props.listInfo.value?this.props.listInfo.value.items:[],horizontal:"horizontal"===this.props.scrollDirection,listKey:this.props.id,onRefresh:this.props.onPullDown?()=>this.props.onPullDown.canExecute&&this.props.onPullDown.execute():void 0,keyExtractor:i=>i.id,renderItem:({item:item,index:index})=>createElement(ItemScope,{scope:item},createElement(View,{testID:`${this.props.name}$item${index}`,style:listItemStyle},this.props.itemTemplate())),onEndReached:()=>{const newAmount=ensure(this.props.amount.value).plus(this.props.pageSize);this.props.amount.setValue(newAmount)}},containerExtraStyleProps);return createElement(FlatList,Object.assign({},listProps))}}function isRefreshing(listInfoStatus,onPullDown){return onPullDown&&onPullDown.canExecute&&onPullDown.isExecuting||"loading"===listInfoStatus}const listWrapperPropKeys=["numColumns"];export{NativeList};
