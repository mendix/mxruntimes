import{FlatList,View}from"react-native";import{Component,createElement}from"react";import"./43297fe2.js";import{e as ensure}from"./c49f953c.js";import{f as flatten}from"./84c5d961.js";class NativeList extends Component{constructor(){super(...arguments),this.onRefreshHandler=this.onRefresh.bind(this),this.renderItemHandler=this.renderItem.bind(this),this.onEndReachedHandler=this.onEndReached.bind(this)}render(){return this.style=flatten(this.props.style),createElement(FlatList,{testID:this.props.name,refreshing:this.isRefreshing,style:this.style.container,data:this.props.listInfo.value?this.props.listInfo.value.items:[],horizontal:"horizontal"===this.props.scrollDirection,listKey:this.props.id,numColumns:this.props.numberOfColumns||1,onRefresh:this.onRefreshHandler,keyExtractor:NativeList.keyExtractor,renderItem:this.renderItemHandler,onEndReached:this.onEndReachedHandler})}renderItem({item:item,index:index}){return createElement(View,{testID:`${this.props.name}$item${index}`,style:[{flex:1/(this.props.numberOfColumns||1)},this.style.listItem]},this.props.itemTemplate(item))}onEndReached(){const newAmount=ensure(this.props.amount.value).plus(this.props.pageSize);this.props.amount.setValue(newAmount)}onRefresh(){this.props.onPullDown&&this.props.onPullDown.canExecute&&this.props.onPullDown.execute()}get isRefreshing(){return this.props.onPullDown&&this.props.onPullDown.canExecute&&this.props.onPullDown.isExecuting||"loading"===this.props.listInfo.status}static keyExtractor(item){return item.id}}export{NativeList};
