import"./5dda5eb7.js";import"./ddd19e5a.js";import{c as asProperty}from"./71d615f7.js";import"./3019ed1f.js";import"./967e2ac0.js";import"./d5eebceb.js";import"./eed44530.js";import"./aa3ddc5d.js";import"./2a30f3af.js";import"./3c905f8d.js";import"./b26e8ded.js";import{c as flatMapL,i as asDynamicValue,e as mapL}from"./cf055752.js";import"./86e285ad.js";import{b as MxObject1}from"./22b17a9f.js";import{a as withObjectStoring}from"./06257d0e.js";import{a as toObjectItem}from"./4068f775.js";const AssociationObjectProperty=asProperty(({scope:scope,path:path},store,widgetId)=>{const mxObject1=withObjectStoring(()=>{const rootObject=MxObject1.fromState(store.get(scope,"object"));return void 0!==path?flatMapL(rootObject,obj=>obj.getByPath(path)):rootObject},store,widgetId);return()=>asDynamicValue(mapL(mxObject1.get(),obj=>toObjectItem(obj.old(),widgetId)))});export{AssociationObjectProperty};
