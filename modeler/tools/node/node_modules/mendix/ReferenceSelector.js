import"./d5eebceb.js";import"./6727fec8.js";import"./eed44530.js";import"./aa3ddc5d.js";import"./ff203afa.js";import{q as clientToAttributeValue}from"./02d97a6c.js";import"react-native";import{createElement}from"react";import"./3019ed1f.js";import"./967e2ac0.js";import"./b0b3290e.js";import"./d9069e30.js";import"./ecb7231a.js";import{a as createFormatter}from"./cfa996c3.js";import{b as fromObjectItem}from"./4068f775.js";import{a as pluckFromList}from"./03e5fd40.js";import"./244bc009.js";import{a as DropDownControl}from"./d54e2fa8.js";function ReferenceSelector(props){const{name:name,value:value,valueOptions:valueOptions,formOrientation:formOrientation,labelWidth:labelWidth,label:label,style:style,attribute:attribute,entity:entity}=props,formatter=createFormatter(entity,attribute,props.formatting),emptyOption={value:"",label:props.emptyOptionCaption.value||""},items="available"===valueOptions.status?[emptyOption,...valueOptions.value.items.map(fromObjectItem).map(({obj:obj})=>({value:obj.getGuid(),label:formatter.format(clientToAttributeValue(obj.get(attribute),obj.getAttributeType(attribute)))}))]:[],enabled="available"===value.status&&!value.readOnly&&"available"===valueOptions.status,validationMessageStyles=pluckFromList(style,"validationMessage");return createElement(DropDownControl,{name:name,style:style,label:label,labelWidth:labelWidth,formOrientation:formOrientation,inline:!1,disabled:!enabled,items:items,selectedValue:value.value||"",onValueChange:newValue=>{props.value.setValue(newValue)},validation:value.validation,validationMessageStyles:validationMessageStyles})}export{ReferenceSelector};
