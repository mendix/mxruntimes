import"react-native";import"./39c2a2fb.js";import{createElement}from"react";import"./546dec4f.js";import"./2bc24ff8.js";import"./2209f9e8.js";import"./dc9e34e0.js";import"./0c69f47a.js";import"./d2546a03.js";import"./fdd4c4ff.js";import{e as clientToAttributeValue}from"./37fca272.js";import"./38d79760.js";import{c as createFormatter}from"./f6cd9545.js";import{f as fromObjectItem}from"./7975ceb4.js";import{p as pluckFromList}from"./c979549b.js";import"./db3af15f.js";import"./3107acfa.js";import{D as DropDownControl}from"./0c4dff6c.js";function ReferenceSelector(props){const{name:name,value:value,valueOptions:valueOptions,formOrientation:formOrientation,labelWidth:labelWidth,label:label,style:style,attribute:attribute,entity:entity}=props,formatter=createFormatter(entity,attribute,props.formatting),emptyOption={value:"",label:props.emptyOptionCaption.value||""},items="available"===valueOptions.status?[emptyOption,...valueOptions.value.items.map(fromObjectItem).map(({obj:obj})=>({value:obj.getGuid(),label:formatter.format(clientToAttributeValue(obj.get(attribute),obj.getAttributeType(attribute)))}))]:[],enabled="available"===value.status&&!value.readOnly&&"available"===valueOptions.status,validationMessageStyles=pluckFromList(style,"validationMessage");return createElement(DropDownControl,{name:name,style:style,label:label,labelWidth:labelWidth,formOrientation:formOrientation,inline:!1,disabled:!enabled,items:items,selectedValue:value.value||"",onValueChange:newValue=>{props.value.setValue(newValue)},validation:value.validation,validationMessageStyles:validationMessageStyles})}export{ReferenceSelector};
