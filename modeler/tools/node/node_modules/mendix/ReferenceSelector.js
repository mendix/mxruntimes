import"react-native";import"./d4030583.js";import{createElement}from"react";import"./43297fe2.js";import"./b98156b5.js";import"./ee5a929f.js";import"big.js";import{f as fromObjectItem}from"./925daa43.js";import{i as clientToAttributeValue}from"./d6b7d05a.js";import"./da601b36.js";import"./5b829f15.js";import"./09e8fbb9.js";import{c as createFormatter}from"./155debd6.js";import"./84c5d961.js";import"./8e73ab64.js";import{D as DropDownControl}from"./93139bd1.js";function ReferenceSelector(props){const{name:name,value:value,valueOptions:valueOptions,formOrientation:formOrientation,labelWidth:labelWidth,label:label,style:style,attribute:attribute,entity:entity}=props,formatter=createFormatter(entity,attribute,props.formatting),emptyOption={value:"",label:props.emptyOptionCaption.value||""},items="available"===valueOptions.status?[emptyOption,...valueOptions.value.items.map(fromObjectItem).map(obj=>({value:obj.getGuid(),label:formatter.format(clientToAttributeValue(obj.get(attribute),obj.getAttributeType(attribute)))}))]:[],enabled=!value.readOnly&&"available"===valueOptions.status;return createElement(DropDownControl,{name:name,style:style,label:label,labelWidth:labelWidth,formOrientation:formOrientation,inline:!1,disabled:!enabled,items:items,selectedValue:value.value||"",onValueChange:newValue=>{props.value.setValue(newValue)},validation:value.validation})}export{ReferenceSelector};
