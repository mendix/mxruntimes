import{o as observable,b as computed,a as action}from"./14498da2.js";import"./53bf75a6.js";import{m as mapValues,e as ensure,s as getOrCrashL}from"./d04a146b.js";import{a as asProperty}from"./e3b801f3.js";import"big.js";import{p as pageScope}from"./5be1b62c.js";import"./572de7b1.js";import"./fdd4c4ff.js";import{t as translate}from"./8ea35cb3.js";import{c as getActionParameters$}from"./bc88246f.js";import{V as ValidationError}from"./b92dd682.js";import"./573c00fc.js";import"./8e682f3a.js";import"./c4184be5.js";import"./4d108c4d.js";import"./a83947cd.js";import{e as executeAction}from"./29c8eeb3.js";const ActionProperty=asProperty((config,store,widgetId)=>{const actionsInProgress=observable.box(0),isExecuting=computed(()=>actionsInProgress.get()>0);return()=>{const parameters=getActionParameters$(config.action.argMap,store),canExecute=Object.values(parameters).every(p=>"available"===p.status);return{canExecute:canExecute,isExecuting:isExecuting.get(),execute:canExecute?action(()=>(function(parameters){if(Object.keys(parameters).some(arg=>{const parameter=parameters[arg];return"selection"===config.action.argMap[arg].source&&void 0!==parameter&&"objects"in parameter&&0===parameter.objects.length}))return void mx.ui.showMessage("info",translate("mxui.widget.DataGrid","no_selection"),!1);const isInvalid=store.get$(widgetId,"isInvalid"),currentForm=ensure(store.get$(pageScope,"form"))[0];actionsInProgress.set(actionsInProgress.get()+1),executeAction(config.action,{abortOnClientValidations:!0,abortOnServerValidations:config.abortOnServerValidation,widgetIsValid:!isInvalid,currentForm:currentForm},parameters,action(()=>{actionsInProgress.set(actionsInProgress.get()-1)}),action(e=>{actionsInProgress.set(actionsInProgress.get()-1),e instanceof ValidationError||mx.onError(e)}))})(mapValues(parameters,getOrCrashL))):()=>mx.logger.debug(`Widget is attempting to execute a ${config.action.type} action which is not executable.`)}}});export{ActionProperty};
