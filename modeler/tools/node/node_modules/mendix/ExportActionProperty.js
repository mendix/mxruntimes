import{f as observable$$1,h as computed$$1,d as withoutGlitches}from"./6727fec8.js";import"./eed44530.js";import"./aa3ddc5d.js";import"./ff203afa.js";import{c as asProperty}from"./71d615f7.js";const ExportActionProperty=asProperty((config,store)=>{const inFlight=observable$$1.box(0),isExecuting=computed$$1(()=>inFlight.get()>0);return()=>{const allGuids=store.get(config.scope,"allGuids");return{canExecute:void 0!==allGuids,isExecuting:isExecuting.get(),execute:async()=>{if(void 0===allGuids||isExecuting.get())return;withoutGlitches(()=>inFlight.set(inFlight.get()+1));const progressId=mx.ui.showProgress("",!0);try{await mx.onlineData.generateExport({guids:allGuids,gridid:config.schemaId,buttonid:config.buttonId})}catch(e){mx.onError(e)}finally{mx.ui.hideProgress(progressId),withoutGlitches(()=>inFlight.set(inFlight.get()-1))}}}}});export{ExportActionProperty};
